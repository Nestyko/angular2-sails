{"version":3,"file":"sails.service.js","sourceRoot":"","sources":["../src/sails.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, NgZone} from \"@angular/core\";\r\nimport {Subject, Observable} from \"rxjs/Rx\";\r\n\r\n\r\ndeclare let io:any;\r\n\r\nif (io && io.sails) {\r\n\r\n\r\n  if (io && io.socket && io.socket.isConnected()) {\r\n    io.socket.disconnect();\r\n  }\r\n\r\n}\r\n\r\ninterface IJWRes {\r\n  body:any;\r\n  error?:any;\r\n  headers:any;\r\n  statusCode:number\r\n}\r\n\r\n@Injectable()\r\nexport class SailsService {\r\n\r\n  private _io:any;\r\n  private _connected:boolean = false;\r\n  private _opts:any\r\n  private _restPrefix:string = \"\";\r\n  private _serverUrl:string;\r\n  private _pubsubSubscriptions:any;\r\n\r\n\r\n  constructor(private zone:NgZone) {\r\n\r\n    this._pubsubSubscriptions = {};\r\n\r\n    this._opts = {\r\n      url: null\r\n    };\r\n\r\n\r\n  }\r\n\r\n  get restPrefix():string {\r\n    return this._restPrefix;\r\n  }\r\n\r\n  set restPrefix(value:string) {\r\n    if (value.length > 0) {\r\n      if (value.charAt((value.length - 1)) == \"/\") {\r\n        value = value.substr(0, value.length - 1);\r\n      }\r\n      this._restPrefix = value;\r\n    }\r\n  }\r\n\r\n\r\n  get serverUrl():string {\r\n    return this._serverUrl;\r\n  }\r\n\r\n  set serverUrl(value:string) {\r\n    if (value.length > 0) {\r\n      if (value.charAt((value.length - 1)) == \"/\") {\r\n        value = value.substr(0, value.length - 1);\r\n      }\r\n      this._serverUrl = value;\r\n    }\r\n  }\r\n\r\n  public connect(url, opts?):void {\r\n\r\n    if (this._connected) {\r\n      this._io.disconnect();\r\n    }\r\n\r\n    // Make URL optional\r\n    if ('object' === typeof url) {\r\n      opts = url;\r\n      url = null;\r\n    }\r\n\r\n    // this._url = url || null;\r\n    // this._opts = opts || {}\r\n\r\n    if (url) {\r\n      this.serverUrl = url;\r\n    } else if (this._opts.url) {\r\n      this.serverUrl = this._opts.url;\r\n    } else if (!(this._serverUrl.length > 0)) {\r\n      this._serverUrl = undefined;\r\n    }\r\n    this._opts.url = this._serverUrl;\r\n\r\n    // // If explicit connection url is specified, save it to options\r\n    // this._opts.url = url || this._opts.url || this._serverUrl;\r\n\r\n    this._io = io.sails.connect(this._opts);\r\n    this._connected = true;\r\n  }\r\n\r\n\r\n  /**\r\n   * @title request\r\n   *\r\n   * @description Send a virtual request to a Sails server using Socket.io.\r\n   * This function is very similar to .get(), .post(), etc.\r\n   * except that it provides lower-level access to the request headers, parameters,\r\n   * method, and URL of the request.\r\n   *\r\n   * example:\r\n   * @Component()\r\n   * export class MyClass implements OnInit {\r\n   *  constructor(private _sailsService:SailsService){}\r\n   *\r\n   *  ngOnInit{\r\n   *\r\n   *    let options = {\r\n   *      method: 'get',\r\n   *      url: 'http://localhost:1337/users'\r\n   *      data: {},\r\n   *      headers: {\r\n   *        'x-csrf-token': 'ji4brixbiub3'\r\n   *      }\r\n   *    }\r\n   *\r\n   *    this._sailsService.request().subscribe(data => {\r\n   *      // do something with the data\r\n   *    })\r\n   *\r\n   *  }\r\n   * }\r\n   *\r\n   * @param options\r\n   * @return {Observable<T>}\r\n     */\r\n  request(options:any):Observable<any> {\r\n    let subject = new Subject();\r\n\r\n    this.zone.runOutsideAngular(()=> {\r\n\r\n      this._io.request(options, (resData, jwres:IJWRes) => {\r\n\r\n        if (io.sails.environment != \"production\") {\r\n          console.log(\"request::data\", resData)\r\n          console.log(\"request:jwr\", jwres)\r\n        }\r\n\r\n        if (jwres.statusCode < 200 || jwres.statusCode >= 400) {\r\n          subject.error(jwres.error)\r\n        } else {\r\n          this.zone.run(() => subject.next(resData));\r\n        }\r\n\r\n        subject.complete();\r\n\r\n\r\n      })\r\n\r\n    })\r\n\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param url\r\n   * @param data\r\n   * @return {Observable<T>}\r\n     */\r\n  get(url, data?:any):Observable<any> {\r\n\r\n    let subject = new Subject();\r\n    this.zone.runOutsideAngular(()=> {\r\n\r\n      this._io.get(`${this._restPrefix}${url}`, data, (resData, jwres:IJWRes)=> {\r\n\r\n        if (io.sails.environment != \"production\") {\r\n          console.log(\"get::data\", resData)\r\n          console.log(\"get:jwr\", jwres)\r\n        }\r\n        if (jwres.statusCode < 200 || jwres.statusCode >= 400) {\r\n          subject.error(jwres.error)\r\n        } else {\r\n          this.zone.run(() => subject.next(resData));\r\n        }\r\n\r\n        subject.complete();\r\n      })\r\n    });\r\n    return subject.asObservable();\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param url\r\n   * @param data\r\n   * @return {Observable<T>}\r\n     */\r\n  post(url, data?:any):Observable<any> {\r\n\r\n    let subject = new Subject();\r\n\r\n    this.zone.runOutsideAngular(()=> {\r\n\r\n      this._io.post(url, data, (resData, jwres:IJWRes)=> {\r\n        if (io.sails.environment != \"production\") {\r\n          console.log(\"post::data\", resData);\r\n          console.log(\"post:jwr\", jwres);\r\n        }\r\n\r\n        if (jwres.statusCode < 200 || jwres.statusCode >= 400) {\r\n          subject.error(jwres.error)\r\n        } else {\r\n          this.zone.run(() => subject.next(resData));\r\n\r\n        }\r\n\r\n        subject.complete();\r\n      })\r\n\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param url\r\n   * @param data\r\n   * @return {Observable<T>}\r\n     */\r\n  put(url, data?:any):Observable<any> {\r\n\r\n    let subject = new Subject();\r\n\r\n    this.zone.runOutsideAngular(()=> {\r\n      this._io.put(url, data, (resData, jwres:IJWRes)=> {\r\n        if (io.sails.environment != \"production\") {\r\n          console.log(\"put::data\", resData);\r\n          console.log(\"put:jwr\", jwres);\r\n        }\r\n\r\n        if (jwres.statusCode < 200 || jwres.statusCode >= 400) {\r\n          subject.error(jwres.error)\r\n        } else {\r\n          //subject.next(resData);\r\n          this.zone.run(() => subject.next(resData));\r\n        }\r\n\r\n        subject.complete();\r\n      })\r\n\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param url\r\n   * @param data\r\n   * @return {Observable<T>}\r\n     */\r\n  delete(url, data?:any):Observable<any> {\r\n\r\n    let subject = new Subject();\r\n\r\n    this.zone.runOutsideAngular(()=> {\r\n\r\n\r\n      this._io.delete(url, data, (resData, jwres:IJWRes)=> {\r\n\r\n        if (io.sails.environment != \"production\") {\r\n          console.log(\"delete::data\", resData);\r\n          console.log(\"delete:jwr\", jwres);\r\n        }\r\n\r\n        if (jwres.statusCode < 200 || jwres.statusCode >= 400) {\r\n          subject.error(jwres.error)\r\n        } else {\r\n          //subject.next(resData);\r\n          this.zone.run(() => subject.next(resData));\r\n        }\r\n\r\n        subject.complete();\r\n      })\r\n\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param eventIdentity\r\n   * @return {Observable<T>}\r\n     */\r\n  on(eventIdentity:string):Observable<any> {\r\n\r\n    if (!this._pubsubSubscriptions[eventIdentity] || this._pubsubSubscriptions[eventIdentity].isComplete) {\r\n      this._pubsubSubscriptions[eventIdentity] = new Subject();\r\n\r\n      this.zone.runOutsideAngular(()=> {\r\n\r\n        this._io.on(eventIdentity, msg => {\r\n\r\n          if (io.sails.environment != \"production\") {\r\n            console.log(`on::${eventIdentity}`, msg);\r\n          }\r\n\r\n          this.zone.run(()=> {\r\n            this._pubsubSubscriptions[eventIdentity].next(msg);\r\n          })\r\n\r\n        })\r\n\r\n      })\r\n    }\r\n\r\n    return this._pubsubSubscriptions[eventIdentity].asObservable();\r\n  }\r\n\r\n  // public off(eventIdentity:string) {\r\n  //\r\n  //   if(<Subject>this._pubsubSubscriptions[eventIdentity]) {\r\n  //\r\n  //   }\r\n  //\r\n  //   if (!<Subject>this._pubsubSubscriptions[eventIdentity].isComplete) {\r\n  //     <Subject>this._pubsubSubscriptions[eventIdentity].complete();\r\n  //   }\r\n  //\r\n  //\r\n  // }\r\n\r\n}\r\n"]}